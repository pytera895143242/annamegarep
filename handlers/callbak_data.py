import asyncio
import json

from aiogram import types
from misc import dp, bot
from .sqlit import change_status,get_username,update_status
import random

text_stop = """<b>–ê—è—è–π —è —Å–º–æ—Ç—Ä—é, –∫—Ç–æ-—Ç–æ —Ä–µ—à–∏–ª
–ø–æ—à–∞–ª–∏—Ç—å üòè

–°–Ω–∞—á–∞–ª–∞ –ø–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ, –∞ –ø–æ—Ç–æ–º –Ω–∞–∂–∏–º–∞–πüôèüôÉ</b>"""



text_dogon = """<b>–ê—è—è–π —è —Å–º–æ—Ç—Ä—é, –∫—Ç–æ-—Ç–æ —Ä–µ—à–∏–ª
–ø–æ—à–∞–ª–∏—Ç—å üòè

–°–Ω–∞—á–∞–ª–∞ –ø–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ, –∞ –ø–æ—Ç–æ–º –Ω–∞–∂–∏–º–∞–πüôèüôÉ</b>"""

from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext

content = -1002028107373

class reg_p(StatesGroup):
    step1 = State()
    step2 = State()
    step3 = State()


time_flag = 1 # 0 - —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, –≥–¥–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã —Ç–∞–π–º.—Å–ª–∏–ø—ã

@dp.callback_query_handler(lambda call: True, state = '*')
async def answer_push_inline_button(call, state: FSMContext):
    await bot.answer_callback_query(call.id)

    if call.data == 'go_1':
        update_status(call.message.chat.id, 1)
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='–î–ê–í–ê–ôüßê', callback_data='go_2')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id = 52)
        if time_flag == 1:
            await asyncio.sleep(3)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id = 53)
        if time_flag == 1:
            await asyncio.sleep(2)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id = 54, reply_markup=markup)


    if call.data == 'go_2':
        update_status(call.message.chat.id, 2)
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='–ê –ö–ê–ö?üßê', callback_data='go_3')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=56, reply_markup=markup)



    if call.data == 'go_3':
        update_status(call.message.chat.id, 3)
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='–î–ê–ê–ê', callback_data='go_4')
        markup.add(bat_a)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=58,reply_markup=markup)



    if call.data == 'go_4':
        update_status(call.message.chat.id, 4)
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='üí∏ –°–ü–†–ò–ù–¢ üí∏', callback_data='go_5')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=61)
        if time_flag == 1:
            await asyncio.sleep(2)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=62, reply_markup=markup)


    if call.data == 'go_5':
        update_status(call.message.chat.id, 5)
        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='üî•–ù–ê–ß–ò–ù–ê–ï–úüî•', callback_data='go_6')
        markup.add(bat_a)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id= 64)
        if time_flag == 1:
            await asyncio.sleep(2)
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=68, reply_markup=markup)



    if call.data == 'go_6':
        update_status(call.message.chat.id, 6)
        await state.update_data(v1='stop')

        markup = types.InlineKeyboardMarkup()
        bat_1 = types.InlineKeyboardButton(text='üî´–î–ê–õ–¨–®–ïüî´', callback_data='go_7')
        markup.add(bat_1)

        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=70,reply_markup=markup)
        if time_flag == 1:
            await asyncio.sleep(30)  # 60 —Å–µ–∫
        await state.update_data(v1='start')

        # –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ 30  –º–∏–Ω—É—Ç!!
        if time_flag == 1:
            await asyncio.sleep(1800)  # –µ—Å–ª–∏ –Ω–µ –Ω–∞–∂–∏–º–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç (1800)
        if ((await state.get_data())['v1']) != 'ready':
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=72)
            await call.message.answer("""–¢–∞–∫ –∫–∞–π—Ñ—É–µ—Ç —Ç–æ—Ç, –∫—Ç–æ —É–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ–ª –≤–∏–¥–æ—Å–∏–∫ –≤—ã—à–µ ‚òùÔ∏è 

<b>–ü–æ–≥–Ω–∞–ª–∏ —Å–º–æ—Ç—Ä–µ—Ç—åüôÑ</b>""", parse_mode='html')



    if call.data == 'go_7':
        try:
            if ((await state.get_data())['v1']) == 'start':
                flag = True
            else:
                flag = False

        except:
            flag = True

        if flag == False:
            await call.message.answer(text_stop)

        else:
            update_status(call.message.chat.id, 7)
            await state.update_data(v1='ready')
            await state.update_data(v2='stop')

            markup = types.InlineKeyboardMarkup()
            bat_a = types.InlineKeyboardButton(text='ü§ì–ü–†–û–ô–¢–ò –¢–ï–°–¢ü§ì', callback_data='go_8')
            markup.add(bat_a)


            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=74,reply_markup=markup)
            if time_flag == 1:
                await asyncio.sleep(60)  # (60 —Å–µ–∫)
            await state.update_data(v2='start')

            if time_flag == 1:
                await asyncio.sleep(1800)  # –µ—Å–ª–∏ –Ω–µ –Ω–∞–∂–∏–º–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç
            if ((await state.get_data())['v2']) != 'ready':
                await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=80)
                await call.message.answer("""–í–æ—Ç —Ç–∞–∫, —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å–º–æ—Ç—Ä–µ–ª –≤–∏–¥–µ–æ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–ª –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å!

<b>–ü–æ—á–µ–º—É —Ç—ã –∑–∞–±–∏–≤–∞–µ—à—å –Ω–∞ —Å–≤–æ–µ –±—É–¥—É—â–µ–µ?</b>

–ì–æ–æ —Å–º–æ—Ç—Ä–µ—Ç—å –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–º–µ—Å—Ç–µü§óü§ë""", parse_mode='html')



    if call.data == 'go_8':
        try:
            if ((await state.get_data())['v2']) == 'start':
                flag = True
            else:
                flag = False

        except:
            flag = True

        if flag == False:
            await call.message.answer(text_stop)

        else:
            update_status(call.message.chat.id, 8)
            await state.update_data(v2='ready')

            markup = types.InlineKeyboardMarkup()
            bat_1 = types.InlineKeyboardButton(text='1Ô∏è‚É£', callback_data='go_9')
            bat_2 = types.InlineKeyboardButton(text='2Ô∏è‚É£', callback_data='answer_false')
            bat_3 = types.InlineKeyboardButton(text='3Ô∏è‚É£', callback_data='answer_false')
            markup.add(bat_1, bat_2, bat_3)

            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id = 82,reply_markup=markup)



    if call.data == 'answer_false':
        await bot.send_message(chat_id=call.message.chat.id, text= "<b>–ù–µ—Ç, —ç—Ç–æ –Ω–µ –∞—Ä–±–∏—Ç—Ä–∞–∂ —Ç—Ä–∞—Ñ–∏–∫–∞. –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑üôÉ</b>", parse_mode='html')

    if call.data == 'go_9':
        update_status(call.message.chat.id, 9)
        await bot.send_message(chat_id=call.message.chat.id, text="""<b>–ö—Ä–∞—Å–∞–≤–∞üòé –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µüöÄ</b>""",parse_mode='html')
        if time_flag == 1:
            await asyncio.sleep(1)

        markup = types.InlineKeyboardMarkup()
        bat_a = types.InlineKeyboardButton(text='‚ö°Ô∏è–ï–î–ï–ú –î–ê–õ–¨–®–ï‚ö°Ô∏è', callback_data='go_10')
        markup.add(bat_a)

        await state.update_data(v3='stop')
        await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=85, reply_markup=markup)
        if time_flag == 1:
            await asyncio.sleep(60)  # (90 —Å–µ–∫)
        await state.update_data(v3='start')

        if time_flag == 1:
            await asyncio.sleep(1800)  # –µ—Å–ª–∏ –Ω–µ –Ω–∞–∂–∏–º–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç
        if ((await state.get_data())['v3']) != 'ready':
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=88)




    if call.data == 'go_10':
        try:
            if ((await state.get_data())['v3']) == 'start':
                flag = True
            else:
                flag = False

        except:
            flag = True

        if flag == False:
            await call.message.answer(text_stop)

        else:
            update_status(call.message.chat.id, 10)
            await state.update_data(v3='ready')
            if time_flag == 1:
                await asyncio.sleep(1)

            await bot.send_message(chat_id=call.message.chat.id, text="""<b>–°–µ–π—á–∞—Å —Å–æ–∑–¥–∞–¥–∏–º —Å —Ç–æ–±–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞üòéü§ë</b>""",parse_mode='html')

            if time_flag == 1:
                await asyncio.sleep(1)


            markup = types.InlineKeyboardMarkup()
            bat_a = types.InlineKeyboardButton(text='ü´°–ì–û–¢–û–í–û‚úîÔ∏è', callback_data='go_11')
            markup.add(bat_a)

            await state.update_data(v4='stop')
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=92,reply_markup=markup)
            if time_flag == 1:
                await asyncio.sleep(30)  # (10 —Å–µ–∫)
            await state.update_data(v4='start')

            if time_flag == 1:
                await asyncio.sleep(1800)  # –µ—Å–ª–∏ –Ω–µ –Ω–∞–∂–∏–º–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç
            if ((await state.get_data())['v4']) != 'ready':
                await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=95)
                await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=96)




    if call.data == 'go_11':
        try:
            update_status(call.message.chat.id, 11)
            await state.update_data(v4='ready')

            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=97)

            if time_flag == 1:
                await asyncio.sleep(180) # 4 –º–∏–Ω—É—Ç—ã
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=101)


            if time_flag == 1:
                await asyncio.sleep(360)  # 6 –º–∏–Ω—É—Ç
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=103)
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=104)


            if time_flag == 1:
                await asyncio.sleep(3600)  # 60 –º–∏–Ω—É—Ç
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=106)


            if time_flag == 1:
                await asyncio.sleep(5400)  # 90 –º–∏–Ω—É—Ç
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=108)

            if time_flag == 1:
                await asyncio.sleep(86400)  # 24 —á–∞—Å–∞
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=110)


            if time_flag == 1:
                await asyncio.sleep(21600)  # 6 —á–∞—Å–æ–≤
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=112)


            if time_flag == 1:
                await asyncio.sleep(43200) # 12 —á–∞—Å–æ–≤
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=114)


            if time_flag == 1:
                await asyncio.sleep(43200)  # 12 —á–∞—Å–æ–≤
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=116)



            if time_flag == 1:
                await asyncio.sleep(43200)  # 12 —á–∞—Å–æ–≤
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=118)


            if time_flag == 1:
                await asyncio.sleep(21600)  # 6 —á–∞—Å–æ–≤
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=120)
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=121)



            if time_flag == 1:
                await asyncio.sleep(86400)  # 24 —á–∞—Å–∞
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=123)
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=124)


            if time_flag == 1:
                await asyncio.sleep(86400)  # 24 —á–∞—Å–∞
            await bot.copy_message(from_chat_id=content, chat_id=call.message.chat.id, message_id=126)

        except:
            pass
